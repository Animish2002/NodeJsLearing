Middleware functions are functions that have access to the request object 
(req), the response object (res), and the next middleware function in the 
applicationâ€™s request-response cycle. The next middleware function is commonly denoted by a variable named next.


Client Request
     |                                                //  Client Request: The client sends a request to the server.
     v
+-----------+
| Middleware|
| Function 1|  --> (req, res, next)                 //Middleware Function 1: The first middleware function processes the request. 
+-----------+                                       //It can perform various operations like logging, authentication, or modifying
     |
     v
+-----------+
| Middleware|
| Function 2|  --> (req, res, next)                 //Middleware Function 2: The second middleware function performs its operations 
+-----------+                                       //and then calls the next middleware function.
     |
     v
+-----------+
| Middleware|                               
| Function 3|  --> (req, res, next)                 //Middleware Function 3: Similarly, the third middleware function processes 
+-----------+                                       //the request and calls the next function.
     |
     v
+-----------+
|   Route   |
|  Handler  |  --> (req, res)                  //Route Handler:handles the request, processes it (e.g., fetching data from a database), 
+-----------+                                  //and sends a response back to the client.
     |
     v
Client Response


Middleware functions can perform the following tasks:

Execute any code.
Make changes to the request and the response objects.
End the request-response cycle.
Call the next middleware function in the stack.